# fly.toml app configuration file generated by Fly.io
# See https://fly.io/docs/reference/configuration/ for information about this file.

app = "everwyn-pet-game" # A more descriptive app name
primary_region = "ord" # Your preferred region, e.g., "ord" (Chicago)

[build]
  # Using a builder is often simpler than a Dockerfile for Node.js apps
  # builder = "paketobuildpacks/builder-nodejs"

[env]
  PORT = "3000"
  DATABASE_PATH = "/data/pets.db" # Consistent with your server.js changes

[http_service]
  internal_port = 3000
  force_https = true
  auto_stop_machines = true
  auto_start_machines = true
  min_machines_running = 0 # Good for hobby projects to save resources
  processes = ["app"]

# [deploy] section is for commands that run once during a new release
# The previous `release_command = "node database.js"` is generally not recommended
# if server.js already handles table creation on startup.
# If database.js is for seeding, it should be run manually or via a separate process.
# For schema migrations, you would use a dedicated migration tool here.
# For now, we'll remove it, assuming server.js handles initialization.
# release_command = "npm run db:migrate" # Example for future migrations

[processes]
  app = "npm start" # This ensures your app starts via the npm start script

[mounts]
  source = "pet_data_vol" # Name of your volume created via `fly volumes create`
  destination = "/data"    # This is where your pets.db file will persist